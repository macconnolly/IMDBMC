{"ast":null,"code":"import _classCallCheck from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macconnolly/CS/mcimdb/src/components/loginPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Alert, Button, Form, FormGroup, Label, Input, Jumbotron, Col, Row } from 'reactstrap';\nimport { loginUserAction } from '../actions/authenticationActions';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.onHandleLogin = function (event) {\n      event.preventDefault();\n      var username = event.target.username.value;\n      var password = event.target.password.value;\n      var data = {\n        username: username,\n        password: password\n      };\n\n      _this.props.dispatch(loginUserAction(data));\n    };\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (Cookies.get('token') !== undefined) {\n        this.props.history.push('/movies');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {}\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(newProps, newState) {\n      return true;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isSuccess, message;\n\n      if (this.props.response.login.hasOwnProperty('response')) {\n        isSuccess = this.props.response.login.response.success;\n        this.props.response.login.response.success ? isSuccess = this.props.response.register.response.success : isSuccess = false;\n        message = this.props.response.login.response.message;\n\n        if (isSuccess) {\n          Cookies.set('token', this.props.response.login.response.token, {\n            expires: 1\n          });\n          console.log('Setting token cookie');\n          console.log(Cookies.get());\n          this.props.history.push('/movies');\n        }\n      }\n\n      if (this.props.response.register.hasOwnProperty('response')) {\n        isSuccess = this.props.response.register.response.success;\n        message = this.props.response.register.response.message;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, isSuccess ? React.createElement(Alert, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, message, \" Please proceed to login below.\") : React.createElement(Alert, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, message), React.createElement(Jumbotron, {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Login to Existing Account\"), React.createElement(Form, {\n        className: \"loginForm\",\n        onSubmit: this.onHandleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"johndoe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        id: \"loginButton\",\n        disabled: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Don't have an account? \", React.createElement(Link, {\n        to: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Register here\")))))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(response) {\n  return {\n    response: response\n  };\n};\n\nexport default connect(mapStateToProps)(LoginPage);","map":{"version":3,"sources":["/Users/macconnolly/CS/mcimdb/src/components/loginPage.js"],"names":["React","Component","Link","connect","Cookies","Alert","Button","Form","FormGroup","Label","Input","Jumbotron","Col","Row","loginUserAction","LoginPage","props","onHandleLogin","event","preventDefault","username","target","value","password","data","dispatch","state","loading","get","undefined","history","push","newProps","newState","nextProps","nextState","prevProps","prevState","isSuccess","message","response","login","hasOwnProperty","success","register","set","token","expires","console","log","size","offset","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Alert, Button, Form, FormGroup, Label, Input, Jumbotron, Col, Row} from 'reactstrap';\nimport { loginUserAction } from '../actions/authenticationActions';\n\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n\n    };\n  }\n  componentWillMount() {\n    if(Cookies.get('token') !== undefined){\n      this.props.history.push('/movies');\n    }\n\n  }\n  componentWillReceiveProps(newProps) {\n\n  }\n  shouldComponentUpdate(newProps, newState) {\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState) {\n\n  }\n  componentDidUpdate(prevProps, prevState) {\n  }\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n\n  }\n\n  onHandleLogin = (event) => {\n    event.preventDefault();\n\n    let username = event.target.username.value;\n    let password = event.target.password.value;\n\n    const data = {\n      username, password\n    };\n\n    this.props.dispatch(loginUserAction(data));\n  };\n\n  render() {\n    let isSuccess, message;\n\n    if (this.props.response.login.hasOwnProperty('response')) {\n      isSuccess = this.props.response.login.response.success;\n      this.props.response.login.response.success ? isSuccess = this.props.response.register.response.success : isSuccess = false;\n      message = this.props.response.login.response.message;\n\n      if (isSuccess) {\n        Cookies.set('token', this.props.response.login.response.token, {expires: 1});\n        console.log('Setting token cookie');\n        console.log(Cookies.get());\n        this.props.history.push('/movies')\n\n      }\n    }\n\n\n\n    if (this.props.response.register.hasOwnProperty('response')) {\n      isSuccess = this.props.response.register.response.success;\n      message = this.props.response.register.response.message;\n    }\n\n    return (\n\n        <div>\n          <br/>\n          <br/>\n\n    <Row>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        {\n          isSuccess\n            ?\n              <Alert color=\"primary\">\n                  {message} Please proceed to login below.\n              </Alert>\n            : <Alert color=\"primary\">\n                {message}\n              </Alert>\n        }\n        <Jumbotron className=\"login\">\n          <h2>Login to Existing Account</h2>\n          <Form className=\"loginForm\" onSubmit={this.onHandleLogin}>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder=\"johndoe\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"examplePassword\"\n                    placeholder=\"********\"\n                />\n              </FormGroup>\n              <Button color=\"primary\" id='loginButton' disabled={this.state.loading}>Login</Button>\n            </Col>\n\n          </Form>\n\n          <br/>\n          <Col>\n            <p>Don't have an account? <Link to='register'>Register here</Link></p>\n          </Col>\n        </Jumbotron>\n      </Col>\n    </Row>\n    </div>\n\n\n\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({response});\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}