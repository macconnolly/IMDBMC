{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macconnolly/CS/bnbcleanings/src/components/propertyForm.js\";\nimport React, { Component } from 'react';\nimport { ButtonToolbar, DropdownButton, Dropdown, Form, Col, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from \"react-redux\";\nimport { push } from 'connected-react-router';\nimport { createProperty, createPropertySuccess } from \"../actions/propertyActions\";\n\nvar PropertyForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PropertyForm, _Component);\n\n  // constructor(props) {\n  //   super(props)\n  //\n  // }\n  // componentDidUpdate(){\n  //\n  // }\n  //\n  // handleOnChangeName=(event)=>\n  // {\n  //   this.setState({name: event.target.value});\n  // };\n  // handleOnChangeAddress=(event)=>\n  // {\n  //   this.setState({address: event.target.value});\n  // };\n  // handleOnChangeCity=(event)=>\n  // {\n  //   this.setState({city: event.target.value});\n  // };\n  // handleOnChangeState=(event)=>\n  // {\n  //   this.setState({state: event.target.value});\n  // };\n  // handleOnChangeZip=(event)=>\n  // {\n  //   this.setState({zip: event.target.value});\n  // };\n  // handleOnChangeCleaner=(event)=>\n  // {\n  //   this.setState({cleaner: event.target.value});\n  // };\n  // handleOnChangeCalendar=(event)=>\n  // {\n  //   this.setState({calendar: event.target.value});\n  // };\n  function PropertyForm(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyForm).call(this, props));\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var target, value, id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                target = event.target;\n                value = target.type === 'checkbox' ? target.checked : target.value;\n                id = target.id;\n                _context.next = 5;\n                return _this.setState(_defineProperty({}, id, value));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onHandleSave = function (event) {\n      event.preventDefault();\n      var data = {\n        name: _this.state.name,\n        address: _this.state.address,\n        city: _this.state.city,\n        state: _this.state.state,\n        zip: _this.state.zip,\n        cleaner: _this.state.cleaner,\n        calendar: _this.state.calendar\n      };\n      console.log(data);\n\n      _this.props.dispatch(createProperty(data));\n\n      console.log('form dispatched create new property action');\n    };\n\n    _this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: ''\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PropertyForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var redirect = this.props.createMovie.movie.createRedirect;\n\n      if (redirect) {\n        this.props.history.push('/movies');\n        this.props.dispatch(push('/movies'));\n        this.props.dispatch(createPropertySuccess());\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Property Information\")), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Movie Title\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeTitle(e);\n        },\n        type: \"text\",\n        id: \"movietitle\",\n        name: \"movietitle\",\n        className: \"form-control actorinput\",\n        placeholder: \"required...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Categorization\")), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridGenre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(DropdownButton, {\n        title: this.state.genre,\n        id: \"dropdown-size-large\",\n        onSelect: function onSelect(eventKey, event) {\n          return _this2.handleOnSelectGenre(eventKey, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Comedy\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Drama\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Fantasy\"), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Horror\"), React.createElement(Dropdown.Item, {\n        eventKey: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Mystery\"), React.createElement(Dropdown.Item, {\n        eventKey: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Thriller\"), React.createElement(Dropdown.Item, {\n        eventKey: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Western\"), React.createElement(Dropdown.Item, {\n        eventKey: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Science Fiction\"))), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(DropdownButton, {\n        title: this.state.rating,\n        id: \"dropdown-size-medium\",\n        onSelect: function onSelect(eventKey, event) {\n          return _this2.handleOnSelectRating(eventKey, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"1\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"2\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"3\"), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"4\"), React.createElement(Dropdown.Item, {\n        eventKey: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"5\"))), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Year Released\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeReleaseDate(e);\n        },\n        type: \"text\",\n        id: \"releaseDate\",\n        placeholder: \"2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Image URL\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeImageUrl(e);\n        },\n        type: \"text\",\n        id: \"imageUrl\",\n        placeholder: \"URL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Location\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeActor1(e);\n        },\n        type: \"text\",\n        id: \"address\",\n        placeholder: \"1817 S Grant St.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeActor2(e);\n        },\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"Denver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeActor3(e);\n        },\n        type: \"text\",\n        id: \"state\",\n        placeholder: \"Denver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeActor3(e);\n        },\n        type: \"text\",\n        id: \"zip\",\n        placeholder: \"80210\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick(e) {\n          return _this2.onHandleSave(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return PropertyForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(createMovie) {\n  return {\n    createMovie: createMovie\n  };\n};\n\nexport default connect(mapStateToProps)(PropertyForm);","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/components/propertyForm.js"],"names":["React","Component","ButtonToolbar","DropdownButton","Dropdown","Form","Col","Button","withRouter","connect","push","createProperty","createPropertySuccess","PropertyForm","props","handleChange","event","target","value","type","checked","id","setState","onHandleSave","preventDefault","data","name","state","address","city","zip","cleaner","calendar","console","log","dispatch","validate","emailState","bind","redirect","createMovie","movie","createRedirect","history","e","handleOnChangeTitle","genre","eventKey","handleOnSelectGenre","rating","handleOnSelectRating","handleOnChangeReleaseDate","handleOnChangeImageUrl","handleOnChangeActor1","handleOnChangeActor2","handleOnChangeActor3","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {ButtonToolbar, DropdownButton, Dropdown, Form, Col, Button} from 'react-bootstrap';\nimport {withRouter} from 'react-router'\n\nimport {connect} from \"react-redux\";\nimport { push } from 'connected-react-router'\nimport {createProperty, createPropertySuccess} from \"../actions/propertyActions\";\n\n\n\nclass PropertyForm extends Component {\n\n  // constructor(props) {\n  //   super(props)\n  //\n  // }\n  // componentDidUpdate(){\n  //\n  // }\n  //\n  // handleOnChangeName=(event)=>\n  // {\n  //   this.setState({name: event.target.value});\n  // };\n  // handleOnChangeAddress=(event)=>\n  // {\n  //   this.setState({address: event.target.value});\n  // };\n  // handleOnChangeCity=(event)=>\n  // {\n  //   this.setState({city: event.target.value});\n  // };\n  // handleOnChangeState=(event)=>\n  // {\n  //   this.setState({state: event.target.value});\n  // };\n  // handleOnChangeZip=(event)=>\n  // {\n  //   this.setState({zip: event.target.value});\n  // };\n  // handleOnChangeCleaner=(event)=>\n  // {\n  //   this.setState({cleaner: event.target.value});\n  // };\n  // handleOnChangeCalendar=(event)=>\n  // {\n  //   this.setState({calendar: event.target.value});\n  // };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: '',\n      },\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { id } = target;\n    await this.setState({\n      [ id ]: value,\n    });\n  };\n\n\n\n  onHandleSave = (event) => {\n\n    event.preventDefault();\n\n    let data = {\n      name: this.state.name,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      zip: this.state.zip,\n      cleaner: this.state.cleaner,\n      calendar:this.state.calendar\n    };\n    console.log(data);\n\n    this.props.dispatch(createProperty(data));\n\n    console.log('form dispatched create new property action')\n  };\n\n  render() {\n    let redirect = this.props.createMovie.movie.createRedirect;\n    if(redirect){\n      this.props.history.push('/movies');\n      this.props.dispatch(push('/movies'));\n      this.props.dispatch(createPropertySuccess());\n\n    }\n    return (\n        <div>\n\n            <Form.Label><h4>Property Information</h4></Form.Label>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Movie Title</Form.Label>\n                <Form.Control onChange={ (e) => this.handleOnChangeTitle(e)} type=\"text\" id=\"movietitle\" name=\"movietitle\" className=\"form-control actorinput\" placeholder=\"required...\"/>\n              </Form.Group>\n\n            </Form.Row>\n            <br/>\n            <Form.Label><h4>Categorization</h4></Form.Label>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridGenre\">\n                <Form.Label>Genre</Form.Label>\n                <DropdownButton\n\n                    title={this.state.genre}\n                    id=\"dropdown-size-large\"\n                    onSelect={ (eventKey,event) => this.handleOnSelectGenre(eventKey,event) }\n                >\n                  <Dropdown.Item eventKey=\"1\">Comedy</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Drama</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">Fantasy</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"4\">Horror</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\">Mystery</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"6\">Thriller</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"7\">Western</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"8\">Science Fiction</Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>Rating</Form.Label>\n                <DropdownButton\n\n                    title={this.state.rating}\n                    id=\"dropdown-size-medium\"\n                    onSelect={ (eventKey,event) => this.handleOnSelectRating(eventKey,event) }\n                >\n                  <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>Year Released</Form.Label>\n                <Form.Control onChange={ (e) => this.handleOnChangeReleaseDate(e)}  type=\"text\" id=\"releaseDate\" placeholder=\"2019\" />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>Image URL</Form.Label>\n                <Form.Control onChange={ (e) => this.handleOnChangeImageUrl(e)}  type=\"text\" id=\"imageUrl\" placeholder=\"URL\" />\n              </Form.Group>\n\n            </Form.Row>\n            <br/>\n\n            <Form.Group controlId=\"Address\">\n            <Form.Label><h4>Location</h4></Form.Label>\n            <br/>\n              <Form.Label>Address</Form.Label>\n              <Form.Control onChange={ (e) => this.handleOnChangeActor1(e)}  type=\"text\" id=\"address\" placeholder=\"1817 S Grant St.\" />\n            </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>City</Form.Label>\n              <Form.Control onChange={ (e) => this.handleOnChangeActor2(e)}  type=\"text\" id=\"city\"  placeholder=\"Denver\" />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>State</Form.Label>\n              <Form.Control onChange={ (e) => this.handleOnChangeActor3(e)}  type=\"text\" id=\"state\"  placeholder=\"Denver\" />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control onChange={ (e) => this.handleOnChangeActor3(e)}  type=\"text\" id=\"zip\"  placeholder=\"80210\" />\n            </Form.Group>\n          </Form.Row>\n            <Button variant=\"primary\" onClick={ (e) => this.onHandleSave(e)}>\n              Save\n            </Button>\n\n        </div>);\n  }\n}\n\nconst mapStateToProps = (createMovie) => ({createMovie});\n\nexport default connect(mapStateToProps)(PropertyForm);\n\n"]},"metadata":{},"sourceType":"module"}