{"ast":null,"code":"import { FETCH_PROPERTIES_SUCCESS, FETCH_PROPERTIES_ERROR, FETCH_PROPERTIES, UPDATE_SELECTED_MOVIE, IN_FLIGHT_START, IN_FLIGHT_STOP, FETCH_MOVIE_DETAILS, FETCH_MOVIE_DETAILS_SUCCESS, FETCH_MOVIE_DETAILS_ERROR, CREATE_MOVIE, CREATE_REVIEW, CREATE_REVIEW_SUCCESS, FINISH_CREATE_REDIRECT } from \"./index\";\nexport function createNewMovieAction(data, token) {\n  return {\n    type: CREATE_MOVIE,\n    data: data,\n    token: token\n  };\n}\nexport var inFlightStart = function inFlightStart() {\n  console.log('in flight start reducer');\n  return {\n    type: IN_FLIGHT_START\n  };\n};\nexport var inFlightStop = function inFlightStop() {\n  return {\n    type: IN_FLIGHT_STOP\n  };\n};\nexport var fetchAllProperties = function fetchAllProperties() {\n  return {\n    type: FETCH_PROPERTIES\n  };\n};\nexport function getAllMoviesSuccess(data) {\n  return {\n    type: FETCH_MOVIE_SUCCESS,\n    data: data\n  };\n}\nexport function getAllMoviesError(data) {\n  return {\n    type: FETCH_MOVIE_ERROR,\n    data: data\n  };\n}\nexport function updateSelectedMovie(movieID) {\n  return {\n    type: UPDATE_SELECTED_MOVIE,\n    movieID: movieID\n  };\n}\nexport function getMovieDetails(data, token) {\n  return {\n    type: FETCH_MOVIE_DETAILS,\n    data: data,\n    token: token\n  };\n}\nexport function getMovieDetailsSuccess(data) {\n  return {\n    type: FETCH_MOVIE_DETAILS_SUCCESS,\n    data: data\n  };\n}\nexport function getMovieDetailsError(data) {\n  return {\n    type: FETCH_MOVIE_DETAILS_ERROR,\n    data: data\n  };\n}\nexport function finishCreateMovie() {\n  return {\n    type: FINISH_CREATE_REDIRECT\n  };\n}\nexport function createReview(data, token) {\n  return {\n    type: CREATE_REVIEW,\n    data: data,\n    token: token\n  };\n}\nexport function createReviewSuccess() {\n  return {\n    type: CREATE_REVIEW_SUCCESS\n  };\n}","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/actions/movieActions.js"],"names":["FETCH_PROPERTIES_SUCCESS","FETCH_PROPERTIES_ERROR","FETCH_PROPERTIES","UPDATE_SELECTED_MOVIE","IN_FLIGHT_START","IN_FLIGHT_STOP","FETCH_MOVIE_DETAILS","FETCH_MOVIE_DETAILS_SUCCESS","FETCH_MOVIE_DETAILS_ERROR","CREATE_MOVIE","CREATE_REVIEW","CREATE_REVIEW_SUCCESS","FINISH_CREATE_REDIRECT","createNewMovieAction","data","token","type","inFlightStart","console","log","inFlightStop","fetchAllProperties","getAllMoviesSuccess","FETCH_MOVIE_SUCCESS","getAllMoviesError","FETCH_MOVIE_ERROR","updateSelectedMovie","movieID","getMovieDetails","getMovieDetailsSuccess","getMovieDetailsError","finishCreateMovie","createReview","createReviewSuccess"],"mappings":"AACA,SACIA,wBADJ,EAEIC,sBAFJ,EAGIC,gBAHJ,EAIIC,qBAJJ,EAKIC,eALJ,EAMIC,cANJ,EAOIC,mBAPJ,EAQIC,2BARJ,EASIC,yBATJ,EAUIC,YAVJ,EAWIC,aAXJ,EAYIC,qBAZJ,EAaIC,sBAbJ,QAcO,SAdP;AAgBA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,KAApC,EAA0C;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEP,YADH;AAEHK,IAAAA,IAAI,EAAJA,IAFG;AAEGC,IAAAA,KAAK,EAALA;AAFH,GAAP;AAIH;AAED,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO;AACHH,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CALM;AAOP,OAAO,IAAMgB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAO;AACHJ,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpC,SAAO;AACHL,IAAAA,IAAI,EAAEd;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,SAASoB,mBAAT,CAA6BR,IAA7B,EAAmC;AACtC,SAAO;AACHE,IAAAA,IAAI,EAAEO,mBADH;AAEHT,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASU,iBAAT,CAA2BV,IAA3B,EAAgC;AACnC,SAAO;AACHE,IAAAA,IAAI,EAAES,iBADH;AAEHX,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASY,mBAAT,CAA6BC,OAA7B,EAAqC;AACxC,SAAO;AACHX,IAAAA,IAAI,EAAEb,qBADH;AAEHwB,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,eAAT,CAAyBd,IAAzB,EAA+BC,KAA/B,EAAqC;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEV,mBADH;AACwBQ,IAAAA,IAAI,EAAJA,IADxB;AAC8BC,IAAAA,KAAK,EAALA;AAD9B,GAAP;AAGH;AACD,OAAO,SAASc,sBAAT,CAAgCf,IAAhC,EAAqC;AACxC,SAAO;AACHE,IAAAA,IAAI,EAAET,2BADH;AACgCO,IAAAA,IAAI,EAAJA;AADhC,GAAP;AAGH;AAED,OAAO,SAASgB,oBAAT,CAA8BhB,IAA9B,EAAmC;AACtC,SAAO;AACHE,IAAAA,IAAI,EAAER,yBADH;AAC8BM,IAAAA,IAAI,EAAJA;AAD9B,GAAP;AAGH;AAED,OAAO,SAASiB,iBAAT,GAA4B;AAC/B,SAAO;AACHf,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH;AAED,OAAO,SAASoB,YAAT,CAAsBlB,IAAtB,EAA4BC,KAA5B,EAAmC;AACtC,SAAM;AACFC,IAAAA,IAAI,EAAEN,aADJ;AACmBI,IAAAA,IAAI,EAAJA,IADnB;AACyBC,IAAAA,KAAK,EAALA;AADzB,GAAN;AAIH;AAED,OAAO,SAASkB,mBAAT,GAA+B;AAClC,SAAM;AACFjB,IAAAA,IAAI,EAAEL;AADJ,GAAN;AAIH","sourcesContent":["\nimport {\n    FETCH_PROPERTIES_SUCCESS,\n    FETCH_PROPERTIES_ERROR,\n    FETCH_PROPERTIES,\n    UPDATE_SELECTED_MOVIE,\n    IN_FLIGHT_START,\n    IN_FLIGHT_STOP,\n    FETCH_MOVIE_DETAILS,\n    FETCH_MOVIE_DETAILS_SUCCESS,\n    FETCH_MOVIE_DETAILS_ERROR,\n    CREATE_MOVIE,\n    CREATE_REVIEW,\n    CREATE_REVIEW_SUCCESS,\n    FINISH_CREATE_REDIRECT\n} from \"./index\";\n\nexport function createNewMovieAction(data, token){\n    return {\n        type: CREATE_MOVIE,\n        data, token\n    }\n}\n\nexport const inFlightStart = () => {\n    console.log('in flight start reducer');\n    return {\n        type: IN_FLIGHT_START\n    }\n};\n\nexport const inFlightStop = () => {\n    return {\n        type: IN_FLIGHT_STOP\n    }\n};\n\nexport const fetchAllProperties = () => {\n    return {\n        type: FETCH_PROPERTIES\n    }\n};\n\nexport function getAllMoviesSuccess(data) {\n    return {\n        type: FETCH_MOVIE_SUCCESS,\n        data\n    };\n}\n\nexport function getAllMoviesError(data){\n    return {\n        type: FETCH_MOVIE_ERROR,\n        data\n    }\n}\n\nexport function updateSelectedMovie(movieID){\n    return {\n        type: UPDATE_SELECTED_MOVIE,\n        movieID\n    }\n}\n\nexport function getMovieDetails(data, token){\n    return {\n        type: FETCH_MOVIE_DETAILS, data, token\n    }\n}\nexport function getMovieDetailsSuccess(data){\n    return {\n        type: FETCH_MOVIE_DETAILS_SUCCESS, data\n    }\n}\n\nexport function getMovieDetailsError(data){\n    return {\n        type: FETCH_MOVIE_DETAILS_ERROR, data\n    }\n}\n\nexport function finishCreateMovie(){\n    return {\n        type: FINISH_CREATE_REDIRECT\n    }\n}\n\nexport function createReview(data, token) {\n    return{\n        type: CREATE_REVIEW, data, token\n    }\n\n}\n\nexport function createReviewSuccess() {\n    return{\n        type: CREATE_REVIEW_SUCCESS\n    }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}