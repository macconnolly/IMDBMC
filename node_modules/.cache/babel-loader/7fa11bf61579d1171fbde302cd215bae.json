{"ast":null,"code":"import _classCallCheck from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macconnolly/CS/mcimdb/src/components/loginPage.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Container, Button, Form, FormGroup, Label, Input, FormText, Jumbotron, Col, Row } from 'reactstrap';\nimport { loginUserAction } from '../actions/authenticationActions';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.onHandleLogin = function (event) {\n      event.preventDefault();\n      var username = event.target.username.value;\n      var password = event.target.password.value;\n      var data = {\n        username: username,\n        password: password\n      };\n\n      _this.props.dispatch(loginUserAction(data));\n\n      var isSuccess, message;\n      isSuccess = _this.props.login.user.loggedIn;\n      message = 'this.props.response.login.user.response.message';\n\n      if (isSuccess) {\n        Cookies.set('token', _this.props.response.login.response.token, {\n          expires: 1\n        });\n        console.log('Setting token cookie');\n        console.log(Cookies.get());\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (Cookies.get('token') !== undefined) {\n        this.props.history.push('/movies');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {}\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(newProps, newState) {\n      return true;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), !this.isSuccess ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.message) : React.createElement(Redirect, {\n        to: \"/movies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Form, {\n        className: \"loginForm\",\n        onSubmit: this.onHandleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Your Username (not email)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Don't have an account? \", React.createElement(Link, {\n        to: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Register here\")))))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component); //const mapStateToProps = (user) => ({state.login});\n\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.login.user\n  };\n}\n\nexport default connect(mapStateToProps)(LoginPage);","map":{"version":3,"sources":["/Users/macconnolly/CS/mcimdb/src/components/loginPage.js"],"names":["React","Component","Link","Redirect","connect","Cookies","Container","Button","Form","FormGroup","Label","Input","FormText","Jumbotron","Col","Row","loginUserAction","LoginPage","props","onHandleLogin","event","preventDefault","username","target","value","password","data","dispatch","isSuccess","message","login","user","loggedIn","set","response","token","expires","console","log","get","undefined","history","push","newProps","newState","nextProps","nextState","prevProps","prevState","size","offset","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Container, Button, Form, FormGroup, Label, Input, FormText, Jumbotron, Col, Row} from 'reactstrap';\nimport { loginUserAction } from '../actions/authenticationActions';\n\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentWillMount() {\n    if(Cookies.get('token') !== undefined){\n      this.props.history.push('/movies');\n    }\n\n  }\n  componentWillReceiveProps(newProps) {\n\n  }\n  shouldComponentUpdate(newProps, newState) {\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState) {\n\n  }\n  componentDidUpdate(prevProps, prevState) {\n  }\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n\n  }\n\n  onHandleLogin = (event) => {\n    event.preventDefault();\n\n    let username = event.target.username.value;\n    let password = event.target.password.value;\n\n    const data = {\n      username, password\n    };\n\n    this.props.dispatch(loginUserAction(data));\n    let isSuccess, message;\n    isSuccess = this.props.login.user.loggedIn;\n    message = 'this.props.response.login.user.response.message';\n    if (isSuccess) {\n      Cookies.set('token', this.props.response.login.response.token, {expires: 1});\n      console.log('Setting token cookie');\n      console.log(Cookies.get());\n    }\n  };\n\n  render() {\n\n\n    return (\n\n        <div>\n          <br/>\n          <br/>\n          {!this.isSuccess ? <div>{this.message}</div> : <Redirect to='/movies' />}\n    <Row>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <Jumbotron className=\"Register\">\n          <h2>Sign Up</h2>\n          <Form className=\"loginForm\" onSubmit={this.onHandleLogin}>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder=\"Your Username (not email)\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"examplePassword\"\n                    placeholder=\"********\"\n                />\n              </FormGroup>\n              <Button>Login</Button>\n            </Col>\n\n          </Form>\n\n          <br/>\n          <Col>\n            <p>Don't have an account? <Link to='register'>Register here</Link></p>\n          </Col>\n        </Jumbotron>\n      </Col>\n    </Row>\n    </div>\n\n\n\n    );\n  }\n}\n\n//const mapStateToProps = (user) => ({state.login});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.login.user\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}