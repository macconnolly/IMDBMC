{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createNewPropertySaga);\n\nimport { put, call } from 'redux-saga/effects';\nimport { push } from \"connected-react-router\";\nimport { createPropertyService } from \"../services/propertyService\";\nimport { CREATE_PROPERTY, CREATE_PROPERTY_SUCCESS, CREATE_PROPERTY_FAILURE } from '../actions';\nexport function createNewPropertySaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function createNewPropertySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('create property saga');\n          _context.next = 4;\n          return call(createPropertyService, action);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return [put({\n            type: CREATE_PROPERTY_SUCCESS,\n            response: response\n          })];\n\n        case 7:\n          this.props.dispatch(push('/movies'));\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: CREATE_PROPERTY_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 10]]);\n}","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/sagas/propertySaga.js"],"names":["createNewPropertySaga","put","call","push","createPropertyService","CREATE_PROPERTY","CREATE_PROPERTY_SUCCESS","CREATE_PROPERTY_FAILURE","action","console","log","response","type","props","dispatch","error"],"mappings":";;;;yBAQiBA,qB;;AARjB,SAAQC,GAAR,EAAaC,IAAb,QAAwB,oBAAxB;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,SAAQC,qBAAR,QAAoC,6BAApC;AACA,SAAQC,eAAR,EAAyBC,uBAAzB,EAAkDC,uBAAlD,QAAgF,YAAhF;AAKA,OAAO,SAAUP,qBAAV,CAAgCQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAFD;AAGkB,iBAAMR,IAAI,CAACE,qBAAD,EAAwBI,MAAxB,CAAV;;AAHlB;AAGOG,UAAAA,QAHP;AAAA;AAIC,iBAAM,CACFV,GAAG,CAAC;AAAEW,YAAAA,IAAI,EAAEN,uBAAR;AAAiCK,YAAAA,QAAQ,EAARA;AAAjC,WAAD,CADD,CAAN;;AAJD;AASC,eAAKE,KAAL,CAAWC,QAAX,CAAoBX,IAAI,CAAC,SAAD,CAAxB;AATD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWC,iBAAMF,GAAG,CAAC;AAAEW,YAAAA,IAAI,EAAEL,uBAAR;AAAiCQ,YAAAA,KAAK;AAAtC,WAAD,CAAT;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {put, call} from 'redux-saga/effects';\nimport {push} from \"connected-react-router\";\nimport {createPropertyService} from \"../services/propertyService\";\nimport {CREATE_PROPERTY, CREATE_PROPERTY_SUCCESS, CREATE_PROPERTY_FAILURE} from '../actions'\n\n\n\n\nexport function* createNewPropertySaga(action) {\n    try {\n        console.log('create property saga');\n        const response = yield call(createPropertyService, action);\n        yield [\n            put({ type: CREATE_PROPERTY_SUCCESS, response }),\n\n\n        ];\n        this.props.dispatch(push('/movies'))\n    } catch(error) {\n        yield put({ type: CREATE_PROPERTY_FAILURE, error })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}