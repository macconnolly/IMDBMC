{"ast":null,"code":"import _classCallCheck from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macconnolly/CS/bnbcleanings/src/components/sidebar/SubMenu.js\";\nimport React from 'react';\nimport { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { updateSelectedMovie } from \"../../actions/movieActions\";\nimport { replace } from \"connected-react-router\";\nimport { connect } from \"react-redux\";\n\nvar SubMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubMenu, _React$Component);\n\n  function SubMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SubMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubMenu).call(this, props));\n\n    _this.handleOnChangeSelectedOption = function (e) {\n      console.log('value of e is ' + e);\n      console.log(e);\n      console.log(e.toString());\n\n      _this.props.dispatch(updateSelectedMovie(e));\n\n      _this.props.dispatch(replace('/properties/#/' + e));\n    };\n\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      collapsed: true\n    };\n    return _this;\n  }\n\n  _createClass(SubMenu, [{\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick() {\n      this.props.onItemClick(this.props.item.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          items = _this$props.items;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        onClick: this.toggleNavbar,\n        className: classNames({\n          'menu-open': !this.state.collapsed\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"dropdown-toggle\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: icon,\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), title)), React.createElement(Collapse, {\n        isOpen: !this.state.collapsed,\n        navbar: true,\n        className: classNames('items-menu', {\n          'mb-1': !this.state.collapsed\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(NavItem, {\n          key: item._id,\n          className: \"pl-4\",\n          eventKey: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          eventKey: item._id,\n          key: item._id,\n          onClick: function onClick(e) {\n            return _this2.handleOnChangeSelectedOption(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, item.name));\n      })));\n    }\n  }]);\n\n  return SubMenu;\n}(React.Component); // const mapDispatchToProps = (dispatch) => {\n// //     return {\n// //         updateProperty: (e) => dispatch(updateSelectedMovie(e)),\n// //     };\n// // };\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubMenu);","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/components/sidebar/SubMenu.js"],"names":["React","Collapse","NavItem","NavLink","FontAwesomeIcon","classNames","updateSelectedMovie","replace","connect","SubMenu","props","handleOnChangeSelectedOption","e","console","log","toString","dispatch","toggleNavbar","bind","state","collapsed","setState","onItemClick","item","id","icon","title","items","map","_id","name","Component","mapDispatchToProps","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport {updateSelectedMovie} from \"../../actions/movieActions\";\nimport {replace} from \"connected-react-router\";\nimport {connect} from \"react-redux\";\n\n\nclass SubMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true\n\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    handleOnChangeSelectedOption = (e) => {\n        console.log('value of e is ' + e);\n        console.log(e)\n        console.log(e.toString())\n        this.props.dispatch(updateSelectedMovie(e));\n        this.props.dispatch(replace('/properties/#/' + e));\n\n    };\n\n\n\n    _onClick() {\n        this.props.onItemClick(this.props.item.id);\n    }\n\n    render() {\n        const { icon, title, items } = this.props;\n        return (\n            <div>\n\n                <NavItem onClick={this.toggleNavbar} className={classNames({'menu-open': !this.state.collapsed})}>\n                    <NavLink className=\"dropdown-toggle\" href=\"#\"><FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}</NavLink>\n                </NavItem>\n                <Collapse isOpen={!this.state.collapsed} navbar className={classNames('items-menu',{'mb-1': !this.state.collapsed})}>\n                    {items.map(item => (\n                        <NavItem key={item._id} className=\"pl-4\" eventKey={item._id} >\n                            <NavLink eventKey={item._id} key={item._id} onClick={(e) => this.handleOnChangeSelectedOption(e) } >{item.name}</NavLink >\n                        </NavItem>\n                    ))}\n                </Collapse>\n            </div>\n        );\n    }\n}\n\n\n// const mapDispatchToProps = (dispatch) => {\n// //     return {\n// //         updateProperty: (e) => dispatch(updateSelectedMovie(e)),\n// //     };\n// // };\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch\n});\n\nconst mapStateToProps = (state) => {\n    return {\n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SubMenu);\n"]},"metadata":{},"sourceType":"module"}