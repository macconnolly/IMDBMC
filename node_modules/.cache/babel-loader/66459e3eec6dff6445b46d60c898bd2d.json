{"ast":null,"code":"import { push, replace } from 'connected-react-router';\nexport var getAllMoviesService = function getAllMoviesService(token) {\n  var MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies?reviews=true';\n  var parameters = {\n    method: 'GET',\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    //console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    //console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var getMovieDetailsService = function getMovieDetailsService(response) {\n  //console.log('movie service call');\n  var MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  var parameters = {\n    method: 'GET',\n    headers: {\n      'Authorization': params.token,\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    //console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    //console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var createMovieService = function createMovieService(action) {\n  console.log('movie service action data:');\n  console.log(JSON.stringify(action.data));\n  console.log(JSON.stringify(action.token));\n  var MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Authorization': action.token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(action.data)\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var createReviewService = function createReviewService(action) {\n  console.log('review service action data:');\n  console.log(JSON.stringify(action.data));\n  console.log(JSON.stringify(action.token));\n  var REVIEW_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/reviews';\n  var parameters = {\n    method: 'PUT',\n    headers: {\n      'Authorization': action.token.toString(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(action.data)\n  };\n  return fetch(REVIEW_API_ENDPOINT, parameters).then(function (response) {\n    console.log('review json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    console.log('review json response' + JSON.stringify(json));\n    return json;\n  });\n};","map":{"version":3,"sources":["/Users/macconnolly/CS/mcimdb/src/services/movieService.js"],"names":["push","replace","getAllMoviesService","token","MOVIE_API_ENDPOINT","parameters","method","headers","fetch","then","response","json","getMovieDetailsService","params","createMovieService","action","console","log","JSON","stringify","data","body","createReviewService","REVIEW_API_ENDPOINT","toString"],"mappings":"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","sourcesContent":["import { push, replace } from 'connected-react-router'\nexport const getAllMoviesService = (token) => {\n    const MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies?reviews=true';\n    const parameters = {\n        method: 'GET',\n        headers: {\n            \"Authorization\": token,\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            //console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            //console.log('Service json response' + JSON.stringify(json));\n            return json;\n        });\n};\n\n\nexport const getMovieDetailsService = (response, ...params) => {\n    //console.log('movie service call');\n    const MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n    const parameters = {\n        method: 'GET',\n        headers: {\n            'Authorization': params.token,\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            //console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            //console.log('Service json response' + JSON.stringify(json));\n            return json;\n        })\n        ;\n};\n\nexport const createMovieService = (action) => {\n    console.log('movie service action data:');\n    console.log(JSON.stringify(action.data));\n    console.log(JSON.stringify(action.token));\n\n    const MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n    const parameters = {\n        method: 'POST',\n        headers: {\n            'Authorization': action.token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(action.data)\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            console.log('Service json response' + JSON.stringify(json));\n\n            return json;\n        })\n\n        ;\n};\n\n\nexport const createReviewService = (action) => {\n    console.log('review service action data:');\n    console.log(JSON.stringify(action.data));\n    console.log(JSON.stringify(action.token));\n\n    const REVIEW_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/reviews';\n    const parameters = {\n        method: 'PUT',\n        headers: {\n            'Authorization': action.token.toString(),\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(action.data)\n    };\n\n    return fetch(REVIEW_API_ENDPOINT, parameters)\n        .then(response => {\n            console.log('review json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            console.log('review json response' + JSON.stringify(json));\n\n            return json;\n        })\n\n        ;\n};"]},"metadata":{},"sourceType":"module"}