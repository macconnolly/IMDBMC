{"ast":null,"code":"import _classCallCheck from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/mcimdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macconnolly/CS/mcimdb/src/components/registerPage.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText, Jumbotron, Col, Row } from 'reactstrap';\nimport { registerUserAction } from '../actions/authenticationActions';\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPage, _Component);\n\n  function RegisterPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onHandleRegistration = function (event) {\n      event.preventDefault();\n      var name = event.target.username.value;\n      var email = event.target.email.value;\n      var password = event.target.password.value;\n      var data = {\n        name: name,\n        email: email,\n        password: password\n      };\n\n      _this.props.dispatch(registerUserAction(data));\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"render\",\n    value: function render() {\n      var message, isSuccess;\n\n      if (this.props.response.register.hasOwnProperty('response')) {\n        isSuccess = this.props.response.register.response.success;\n        message = this.props.response.register.response.message;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"RegisterPage\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Form, {\n        className: \"form\",\n        onSubmit: this.onHandleRegistration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"myemail@email.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Submit\")), !isSuccess ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, message) : React.createElement(Redirect, {\n        to: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Form, {\n        className: \"form\",\n        onSubmit: this.onHandleRegistration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"John Doe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"myemail@email.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Register\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Already have account? \", React.createElement(Link, {\n        to: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Login here\"))))));\n    }\n  }]);\n\n  return RegisterPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(response) {\n  return {\n    response: response\n  };\n};\n\nexport default connect(mapStateToProps)(RegisterPage);","map":{"version":3,"sources":["/Users/macconnolly/CS/mcimdb/src/components/registerPage.js"],"names":["React","Component","Link","Redirect","connect","Button","Form","FormGroup","Label","Input","FormText","Jumbotron","Col","Row","registerUserAction","RegisterPage","onHandleRegistration","event","preventDefault","name","target","username","value","email","password","data","props","dispatch","message","isSuccess","response","register","hasOwnProperty","success","size","offset","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText, Jumbotron, Col, Row} from 'reactstrap';\nimport { registerUserAction } from '../actions/authenticationActions';\n\nclass RegisterPage extends Component {\n  onHandleRegistration = (event) => {\n    event.preventDefault();\n\n    let name = event.target.username.value;\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n\n    const data = {\n      name, email, password\n    };\n\n    this.props.dispatch(registerUserAction(data));\n\n  }\n\n  render() {\n    let message, isSuccess;\n\n    if (this.props.response.register.hasOwnProperty('response')) {\n      isSuccess = this.props.response.register.response.success;\n      message = this.props.response.register.response.message;\n    }\n    \n    return (\n      <div>\n        <h3>RegisterPage</h3>\n        <h2>Sign In</h2>\n        <Form className=\"form\" onSubmit={this.onHandleRegistration}>\n          <Col>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"myemail@email.com\"\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"examplePassword\"\n                  placeholder=\"********\"\n              />\n            </FormGroup>\n          </Col>\n          <Button>Submit</Button>\n        </Form>\n\n\n        {!isSuccess ? <div>{message}</div> : <Redirect to='login' />}\n        <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <Jumbotron className=\"Register\">\n          <h2>Sign Up</h2>\n          <Form className=\"form\" onSubmit={this.onHandleRegistration}>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"John Doe\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label>Email</Label>\n                <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"exampleEmail\"\n                    placeholder=\"myemail@email.com\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"examplePassword\"\n                    placeholder=\"********\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n            <Button>Register</Button>\n            </Col>\n          </Form>\n          <br/>\n          <Col>\n            Already have account? <Link to='login'>Login here</Link>\n          </Col>\n        </Jumbotron>\n        </Col>\n      </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}