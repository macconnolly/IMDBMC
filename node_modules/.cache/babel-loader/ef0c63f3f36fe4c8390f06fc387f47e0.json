{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macconnolly/CS/bnbcleanings/src/components/propertyForm.js\";\nimport React, { Component } from 'react';\nimport { ButtonToolbar, DropdownButton, Dropdown, Form, Col, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from \"react-redux\";\nimport { push } from 'connected-react-router';\nimport { createProperty, createPropertySuccess } from \"../actions/propertyActions\";\n\nvar PropertyForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PropertyForm, _Component);\n\n  function PropertyForm(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyForm).call(this, props));\n\n    _this.handleDropdownChange = function (e) {\n      console.log('event key');\n      console.log(e);\n\n      _this.setState({\n        cleaner: e\n      }); //console.log(e.target.value.toLowerCase().trim())\n\n    };\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var target, value, id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                target = event.target;\n                value = target.type === 'checkbox' ? target.checked : target.value;\n                id = target.id;\n                _context.next = 5;\n                return _this.setState(_defineProperty({}, id, value));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onHandleSave = function (event) {\n      event.preventDefault();\n      var data = {\n        name: _this.state.name,\n        address: _this.state.address,\n        city: _this.state.city,\n        state: _this.state.state,\n        zip: _this.state.zip,\n        cleaner: _this.state.cleaner,\n        calendar: _this.state.calendar\n      };\n      console.log(data);\n\n      _this.props.dispatch(createProperty(data));\n\n      console.log('form dispatched create new property action');\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.select = _this.select.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      \"cleaners\": [],\n      dropdownOpen: false,\n      value: \"Select Assigned Cleaner\",\n      'name': '',\n      'address': '',\n      'city': '',\n      'state': '',\n      'zip': '',\n      'cleaner': '',\n      'calendar': '',\n      validate: {\n        emailState: ''\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PropertyForm, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(event) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen,\n        value: event.target.innerText\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var parameters = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      return fetch('http://localhost:8080/cleaners', parameters).then(function (response) {\n        console.log('property fetch callback json first response: ' + JSON.stringify(response));\n        return response.json();\n      }).then(function (json) {\n        console.log('property fetch callback json response' + JSON.stringify(json));\n        var data = JSON.parse(JSON.stringify(json));\n        console.log(data.cleaners);\n\n        _this2.setState({\n          \"cleaners\": data.cleaners\n        });\n\n        return json;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var redirect = this.props.createProperty.movie.createRedirect;\n\n      if (redirect) {\n        this.props.history.push('/movies');\n        this.props.dispatch(push('/movies'));\n        this.props.dispatch(createPropertySuccess());\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Property Information\")), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Property Name\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        className: \"form-control\",\n        placeholder: \"Bonnie Brae\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Location\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"address\",\n        placeholder: \"1817 S Grant St.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"Denver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"state\",\n        placeholder: \"Denver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"zip\",\n        placeholder: \"80210\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Property Data Info\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"cleanerID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Calendar URL\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        type: \"text\",\n        id: \"calendar\",\n        name: \"calendar\",\n        className: \"form-control\",\n        placeholder: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"cleanerID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Calendar URL\"), React.createElement(DropdownButton, {\n        onSelect: function onSelect(event) {\n          return _this3.handleDropdownChange(event);\n        },\n        onChange: function onChange(event) {\n          return _this3.handleDropdownChange(event);\n        },\n        variant: \"outline-primary\",\n        size: \"md\",\n        title: this.state.value,\n        id: \"category-dropdown\",\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.state.cleaners.map(function (cleaner, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          eventKey: cleaner._id,\n          onClick: _this3.select,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, cleaner.name);\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick(e) {\n          return _this3.onHandleSave(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return PropertyForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(createProperty) {\n  return {\n    createProperty: createProperty\n  };\n};\n\nexport default connect(mapStateToProps)(PropertyForm);","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/components/propertyForm.js"],"names":["React","Component","ButtonToolbar","DropdownButton","Dropdown","Form","Col","Button","withRouter","connect","push","createProperty","createPropertySuccess","PropertyForm","props","handleDropdownChange","e","console","log","setState","cleaner","handleChange","event","target","value","type","checked","id","onHandleSave","preventDefault","data","name","state","address","city","zip","calendar","dispatch","toggle","bind","select","dropdownOpen","validate","emailState","innerText","parameters","method","headers","fetch","then","response","JSON","stringify","json","parse","cleaners","redirect","movie","createRedirect","history","map","i","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {ButtonToolbar, DropdownButton, Dropdown, Form, Col, Button} from 'react-bootstrap';\nimport {withRouter} from 'react-router'\n\nimport {connect} from \"react-redux\";\nimport { push } from 'connected-react-router'\nimport {createProperty, createPropertySuccess} from \"../actions/propertyActions\";\n\n\n\nclass PropertyForm extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.select = this.select.bind(this);\n    this.state = {\n      \"cleaners\": [],\n      dropdownOpen: false,\n      value : \"Select Assigned Cleaner\",\n      'name': '',\n      'address': '',\n      'city': '',\n      'state': '',\n      'zip': '',\n      'cleaner': '',\n      'calendar': '',\n      validate: {\n        emailState: '',\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleDropdownChange = (e) => {\n    console.log('event key');\n    console.log(e);\n    this.setState({\n      cleaner: e\n    })\n\n    //console.log(e.target.value.toLowerCase().trim())\n  };\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      value: event.target.innerText\n    });\n  }\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { id } = target;\n    await this.setState({\n      [ id ]: value,\n    });\n  };\n\n\n\n  onHandleSave = (event) => {\n    event.preventDefault();\n    let data = {\n      name: this.state.name,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      zip: this.state.zip,\n      cleaner: this.state.cleaner,\n      calendar:this.state.calendar\n    };\n    console.log(data);\n\n    this.props.dispatch(createProperty(data));\n\n    console.log('form dispatched create new property action')\n  };\n\n  componentWillMount() {\n\n    const parameters = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json'\n      }};\n    return fetch('http://localhost:8080/cleaners', parameters)\n        .then(response => {\n          console.log('property fetch callback json first response: ' + JSON.stringify(response));\n          return response.json();\n        })\n        .then(json => {\n          console.log('property fetch callback json response' + JSON.stringify(json));\n          let data = JSON.parse(JSON.stringify(json));\n          console.log(data.cleaners);\n          this.setState({\n            \"cleaners\": data.cleaners\n          });\n          return json;\n        });\n  }\n\n  render() {\n    let redirect = this.props.createProperty.movie.createRedirect;\n    if(redirect){\n      this.props.history.push('/movies');\n      this.props.dispatch(push('/movies'));\n      this.props.dispatch(createPropertySuccess());\n\n    }\n    return (\n        <div>\n\n            <Form.Label><h4>Property Information</h4></Form.Label>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Property Name</Form.Label>\n                <Form.Control onChange={ (e) => this.handleChange(e)} type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" placeholder=\"Bonnie Brae\"/>\n              </Form.Group>\n            </Form.Row>\n            <br/>\n\n            <Form.Group controlId=\"Address\">\n            <Form.Label><h4>Location</h4></Form.Label>\n            <br/>\n              <Form.Label>Address</Form.Label>\n              <Form.Control onChange={ (e) => this.handleChange(e)}  type=\"text\" id=\"address\" placeholder=\"1817 S Grant St.\" />\n            </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>City</Form.Label>\n              <Form.Control onChange={ (e) => this.handleChange(e)}  type=\"text\" id=\"city\"  placeholder=\"Denver\" />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>State</Form.Label>\n              <Form.Control onChange={ (e) => this.handleChange(e)}  type=\"text\" id=\"state\"  placeholder=\"Denver\" />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridAddress1\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control onChange={ (e) => this.handleChange(e)}  type=\"text\" id=\"zip\"  placeholder=\"80210\" />\n            </Form.Group>\n          </Form.Row>\n          <br />\n\n          <Form.Label><h4>Property Data Info</h4></Form.Label>\n          <br />\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"cleanerID\">\n              <Form.Label>Calendar URL</Form.Label>\n              <Form.Control onChange={ (e) => this.handleChange(e)} type=\"text\" id=\"calendar\" name=\"calendar\" className=\"form-control\" placeholder=\"required\"/>\n            </Form.Group>\n            <Form.Group  as={Col} controlId=\"cleanerID\">\n              <Form.Label>Calendar URL</Form.Label>\n\n              <DropdownButton\n                  onSelect={(event) => this.handleDropdownChange(event)}\n                  onChange={(event) => this.handleDropdownChange(event)}\n                  variant=\"outline-primary\"\n                  size=\"md\"\n                  title={this.state.value}\n                  id=\"category-dropdown\"\n                  toggle={this.toggle} >\n\n                {this.state.cleaners.map((cleaner, i) =>\n                    <Dropdown.Item  key={i} eventKey={cleaner._id} onClick={this.select}>{cleaner.name}</Dropdown.Item>)\n                }\n              </DropdownButton>\n            </Form.Group>\n          </Form.Row>\n          <br />\n\n            <Button variant=\"primary\" onClick={ (e) => this.onHandleSave(e)}>\n              Save\n            </Button>\n\n\n\n        </div>);\n  }\n}\n\nconst mapStateToProps = (createProperty) => ({createProperty});\n\nexport default connect(mapStateToProps)(PropertyForm);\n\n"]},"metadata":{},"sourceType":"module"}