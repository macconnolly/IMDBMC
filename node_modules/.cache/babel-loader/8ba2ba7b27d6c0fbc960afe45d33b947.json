{"ast":null,"code":"import { push, replace } from 'connected-react-router';\nexport var getAllPropertiesService = function getAllPropertiesService() {\n  console.log('into get properties service');\n  var MOVIE_API_ENDPOINT = 'http://localhost:8080/properties';\n  var parameters = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var getMovieDetailsService = function getMovieDetailsService(response) {\n  //console.log('movie service call');\n  var MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  var parameters = {\n    method: 'GET',\n    headers: {\n      'Authorization': params.token,\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    //console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    //console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var createMovieService = function createMovieService(action) {\n  console.log('movie service action data:');\n  console.log(JSON.stringify(action.data));\n  console.log(JSON.stringify(action.token));\n  var MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Authorization': action.token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(action.data)\n  };\n  return fetch(MOVIE_API_ENDPOINT, parameters).then(function (response) {\n    console.log('service json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    console.log('Service json response' + JSON.stringify(json));\n    return json;\n  });\n};\nexport var createReviewService = function createReviewService(action) {\n  console.log('review service action data:');\n  console.log(JSON.stringify(action.data));\n  console.log(JSON.stringify(action.token));\n  var REVIEW_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/reviews';\n  var parameters = {\n    method: 'PUT',\n    headers: {\n      'Authorization': action.token.toString(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(action.data)\n  };\n  return fetch(REVIEW_API_ENDPOINT, parameters).then(function (response) {\n    console.log('review json first response: ' + JSON.stringify(response));\n    return response.json();\n  }).then(function (json) {\n    console.log('review json response' + JSON.stringify(json));\n    return json;\n  });\n};","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/services/movieService.js"],"names":["push","replace","getAllPropertiesService","console","log","MOVIE_API_ENDPOINT","parameters","method","headers","fetch","then","response","JSON","stringify","json","getMovieDetailsService","params","token","createMovieService","action","data","body","createReviewService","REVIEW_API_ENDPOINT","toString"],"mappings":"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","sourcesContent":["import { push, replace } from 'connected-react-router'\nexport const getAllPropertiesService = () => {\n    console.log('into get properties service')\n    const MOVIE_API_ENDPOINT = 'http://localhost:8080/properties';\n    const parameters = {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            console.log('Service json response' + JSON.stringify(json));\n            return json;\n        });\n};\n\n\nexport const getMovieDetailsService = (response, ...params) => {\n    //console.log('movie service call');\n    const MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n    const parameters = {\n        method: 'GET',\n        headers: {\n            'Authorization': params.token,\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            //console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            //console.log('Service json response' + JSON.stringify(json));\n            return json;\n        })\n        ;\n};\n\nexport const createMovieService = (action) => {\n    console.log('movie service action data:');\n    console.log(JSON.stringify(action.data));\n    console.log(JSON.stringify(action.token));\n\n    const MOVIE_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/movies';\n    const parameters = {\n        method: 'POST',\n        headers: {\n            'Authorization': action.token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(action.data)\n    };\n\n    return fetch(MOVIE_API_ENDPOINT, parameters)\n        .then(response => {\n            console.log('service json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            console.log('Service json response' + JSON.stringify(json));\n\n            return json;\n        })\n\n        ;\n};\n\n\nexport const createReviewService = (action) => {\n    console.log('review service action data:');\n    console.log(JSON.stringify(action.data));\n    console.log(JSON.stringify(action.token));\n\n    const REVIEW_API_ENDPOINT = 'https://csc3916-hw4.herokuapp.com/reviews';\n    const parameters = {\n        method: 'PUT',\n        headers: {\n            'Authorization': action.token.toString(),\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(action.data)\n    };\n\n    return fetch(REVIEW_API_ENDPOINT, parameters)\n        .then(response => {\n            console.log('review json first response: ' + JSON.stringify(response));\n            return response.json();\n        })\n        .then(json => {\n            console.log('review json response' + JSON.stringify(json));\n\n            return json;\n        })\n\n        ;\n};"]},"metadata":{},"sourceType":"module"}