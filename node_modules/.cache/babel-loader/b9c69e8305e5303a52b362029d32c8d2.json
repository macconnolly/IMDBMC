{"ast":null,"code":"import _classCallCheck from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macconnolly/CS/bnbcleanings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macconnolly/CS/bnbcleanings/src/components/propertyList.js\";\nimport React, { Component } from 'react';\nimport { CardColumns, Col, Image, ListGroup, Nav, Row, Tab, Modal, Button, Form, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { fetchAllProperties, updateSelectedMovie, createReview } from '../actions/movieActions';\nimport { connect } from \"react-redux\";\nimport { replace, push } from 'connected-react-router';\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Cookies from 'js-cookie';\n\nvar PropertyList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PropertyList, _Component);\n\n  function PropertyList(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyList).call(this, props));\n\n    _this.handleOnSelectRating = function (eventKey, event) {\n      _this.setState({\n        reviewRating: eventKey\n      });\n\n      console.log('rating: ' + _this.state.reviewRating);\n    };\n\n    _this.handleOnChangeReviewBody = function (event) {\n      _this.setState({\n        reviewBody: event.target.value\n      });\n\n      console.log('review: ' + _this.state.reviewBody);\n    };\n\n    _this.handleOnChangeSelectedOption = function (e) {\n      console.log('value of e is ' + e);\n\n      _this.props.dispatch(updateSelectedMovie(e));\n\n      _this.props.dispatch(replace('/movies/#/' + e));\n    };\n\n    if (_this.props.onTitleChange) _this.props.onTitleChange(null);\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false,\n      reviewRating: 'Select rating',\n      reviewBody: ''\n    };\n    return _this;\n  } // handleSelect(key) {\n  //     console.log('selected' + key);\n  //     this.setState({ key: key });\n  // }\n\n\n  _createClass(PropertyList, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      var token = Cookies.get('token');\n      var data = {\n        reviewBody: this.state.reviewBody,\n        reviewScore: this.state.reviewRating,\n        movieID: this.props.selectedOption\n      };\n      this.props.dispatch(createReview(data, token));\n      this.setState({\n        show: false,\n        reviewRating: 'Select rating',\n        reviewBody: ''\n      });\n      this.props.dispatch(fetchAllProperties(Cookies.get('token')));\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var hash = this.props.hash.substr(2);\n      var currentPropertyID = this.props.selectedOption;\n      console.log('hash: ' + hash);\n      console.log('selectedOption: ' + currentPropertyID);\n\n      if (this.props.hash !== \"\" && currentPropertyID === \"\") {\n        this.props.dispatch(updateSelectedMovie(hash));\n      }\n\n      this.props.dispatch(fetchAllProperties(Cookies.get('token'))); //\n      // console.log('Component WILL MOUNT!');\n      // console.log('hash: ' + this.props.hash)\n      // console.log('selected option: ' + this.props.selectedOption);\n      // //this.props.dispatch(fetchAllProperties(checkCookie()));\n      // console.log('selected option: ' + this.props.selectedOption);\n      // if(this.props.selectedOption === \"\"){\n      //\n      //     this.props.dispatch(fetchAllProperties(checkCookie()));\n      //     this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)));\n      // }\n      // else {\n      //\n      //     this.props.dispatch(updateSelectedMovie(this.props.selectedOption));\n      //\n      // }\n      //updateSelectedMovie(this.props.hash.substr(2));\n      // console.log('selected option: ' + this.props.selectedOption);\n      //\n      //this.props.dispatch(fetchAllProperties(checkCookie()));\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {//console.log('comp will receive props: ' )\n      //var newPropsObject = JSON.parse(newProps);\n      //var result = newPropsObject[0];\n      //console.log(JSON.parse(newProps))\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(newProps, newState) {\n      return true;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      var hash = this.props.hash.substr(2);\n      var currentPropertyID = this.props.selectedOption;\n\n      if (hash === '' && currentPropertyID == '') {} // let m = nextProps.propertyList[0]._id\n      // console.log(m)\n      //this.handleOnChangeSelectedOption(m);\n      //const firstMovie = JSON.parse(nextProps.propertyList[0]._id)\n      //this.handleOnChangeSelectedOption(firstMovie)\n      // console.log('comp will update')\n      // if(this.props.selectedOption === '') {\n      //     let firstMovie = nextProps.propertyList[0]._id\n      //     this.handleOnChangeSelectedOption(firstMovie);\n      // }\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {//updateSelectedMovie(prevProps.hash.substr(2))\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('comp will unmount');\n    } // handleOnLoadMovies = (token) => {\n    //     this.handleOnChangeSelectedOption(this.props.selectedOption || this.props.hash.substr(2));\n    //     this.props.dispatch(fetchAllProperties(token));\n    //\n    //\n    //\n    // };\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// if(this.props.selectedOption === \"\"){\n      //     this.props.dispatch(updateSelectedMovie(this.props.propertyList[0]._id));\n      // }\n      // this.props.dispatch(fetchAllProperties(checkCookie()));\n      //this.handleOnChangeSelectedOption(this.props.hash.substr(2))\n      //this.props.dispatch(fetchAllProperties(checkCookie()));\n      //this.props.dispatch(updateSelectedMovie(this.props.selectedOption));\n      //this.props.dispatch(replace('/movies/#/' + this.props.selectedOption));\n      //console.log('comp did mount')\n      //this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)));\n    }\n  }, {\n    key: \"render\",\n    // handleOnLoadMovies = (token) => {\n    //     this.props.dispatch(fetchAllProperties(token)).then((response) => {\n    //         console.log('MOVIES RETURNED - UPDATE STATE' + response);\n    //         this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)))\n    //\n    //     }).catch((error) => {\n    //         console.log('ERROR')\n    //     }));\n    //\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        className: \"movie-list-tabbed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Tab.Container, {\n        id: \"moviestabs\",\n        defaultActiveKey: \"a\",\n        activeKey: this.props.currentPropertyID,\n        mountOnEnter: false,\n        onSelect: function onSelect(e) {\n          return _this2.handleOnChangeSelectedOption(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Top Rated Movies\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"flex-column\",\n        activeKey: this.props.selectedOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, this.props.propertyList.map(function (property, index) {\n        return React.createElement(Nav.Item, {\n          key: property._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(Nav.Link, {\n          eventKey: property._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, '' + (index + 1) + '. ' + property.name));\n      }))))), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Tab.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, this.props.propertyList.map(function (movie, index) {\n        return React.createElement(Tab.Pane, {\n          key: movie._id,\n          eventKey: movie._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(Image, {\n          width: 200,\n          src: movie.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        })), React.createElement(Col, {\n          md: \"8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, movie.title), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Genre: \", movie.genre), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Average Rating: \", movie.avgRating))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(React.Fragment, null, React.createElement(Button, {\n          variant: \"primary\",\n          onClick: _this2.handleShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \"Write a review\")))))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"Reviews\"), React.createElement(CardColumns, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }));\n      })))))), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Create Review\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"reviewForm.reviewBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Movie Review\"), React.createElement(Form.Control, {\n        onChange: function onChange(e) {\n          return _this2.handleOnChangeReviewBody(e);\n        },\n        type: \"text\",\n        id: \"reviewBody\",\n        as: \"textarea\",\n        rows: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"reviewForm.rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(DropdownButton, {\n        title: this.state.reviewRating,\n        id: \"dropdown-size-medium\",\n        onSelect: function onSelect(eventKey, event) {\n          return _this2.handleOnSelectRating(eventKey, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"1\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"2\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"3\"), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"4\"), React.createElement(Dropdown.Item, {\n        eventKey: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"5\"))))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Submit Review\"))));\n    }\n  }]);\n\n  return PropertyList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    hash: state.router.location.hash,\n    propertyList: state.movie.properties,\n    selectedOption: state.movie.selectedOption,\n    inFlight: state.movie.inFlight\n  };\n};\n\nexport default connect(mapStateToProps)(PropertyList); // <ListGroup variant=\"flush\">\n//     {this.props.propertyList.map((movie, index) => (\n//             <ListGroup.Item\n//                 action\n//                 key={movie._id}\n//                 value={movie._id}\n//                 active={this.props.selectedOption === movie._id}\n//                 onClick={(e) => this.handleOnChangeSelectedOption(e)}\n//             >\n//                 {movie.title}\n//             </ListGroup.Item>\n//\n//         ))}\n// </ListGroup>","map":{"version":3,"sources":["/Users/macconnolly/CS/bnbcleanings/src/components/propertyList.js"],"names":["React","Component","CardColumns","Col","Image","ListGroup","Nav","Row","Tab","Modal","Button","Form","DropdownButton","Dropdown","fetchAllProperties","updateSelectedMovie","createReview","connect","replace","push","Card","Container","Cookies","PropertyList","props","handleOnSelectRating","eventKey","event","setState","reviewRating","console","log","state","handleOnChangeReviewBody","reviewBody","target","value","handleOnChangeSelectedOption","e","dispatch","onTitleChange","handleShow","bind","handleClose","show","token","get","data","reviewScore","movieID","selectedOption","hash","substr","currentPropertyID","newProps","newState","nextProps","nextState","prevProps","prevState","propertyList","map","property","index","_id","name","movie","imageUrl","title","genre","avgRating","mapStateToProps","pathname","router","location","search","properties","inFlight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    CardColumns,\n    Col,\n    Image,\n    ListGroup,\n    Nav,\n    Row,\n    Tab,\n    Modal,\n    Button,\n    Form,\n    DropdownButton,\n    Dropdown\n} from 'react-bootstrap';\nimport {fetchAllProperties, updateSelectedMovie, createReview} from '../actions/movieActions';\nimport {connect} from \"react-redux\";\nimport { replace, push } from 'connected-react-router'\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Cookies from 'js-cookie';\n\n\n\nclass PropertyList extends Component {\n    constructor(props) {\n\n        super(props);\n        if (this.props.onTitleChange)\n            this.props.onTitleChange(null);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.state = {\n            show: false,\n            reviewRating: 'Select rating',\n            reviewBody: ''\n        };\n    }\n\n    // handleSelect(key) {\n    //     console.log('selected' + key);\n    //     this.setState({ key: key });\n    // }\n\n    handleOnSelectRating = (eventKey, event) => {\n        this.setState({\n            reviewRating: eventKey\n        });\n        console.log('rating: ' + this.state.reviewRating);\n    };\n\n    handleOnChangeReviewBody=(event)=>\n    {\n        this.setState({reviewBody: event.target.value});\n        console.log('review: ' + this.state.reviewBody);\n    };\n\n    handleClose() {\n\n        let token = Cookies.get('token');\n\n\n        var data = {\n            reviewBody: this.state.reviewBody,\n            reviewScore: this.state.reviewRating,\n            movieID: this.props.selectedOption\n        };\n        this.props.dispatch(createReview(data, token));\n        this.setState({\n            show: false,\n            reviewRating: 'Select rating',\n            reviewBody: ''});\n\n        this.props.dispatch(fetchAllProperties(Cookies.get('token')));\n\n    }\n\n    handleShow() {\n        this.setState({ show: true });\n    }\n\n    componentWillMount() {\n\n        let hash = this.props.hash.substr(2);\n        let currentPropertyID = this.props.selectedOption;\n        console.log('hash: ' + hash);\n        console.log('selectedOption: ' + currentPropertyID);\n        if (this.props.hash !== \"\" && currentPropertyID === \"\"){\n            this.props.dispatch(updateSelectedMovie(hash));\n        }\n        this.props.dispatch(fetchAllProperties(Cookies.get('token')));\n\n        //\n        // console.log('Component WILL MOUNT!');\n        // console.log('hash: ' + this.props.hash)\n        // console.log('selected option: ' + this.props.selectedOption);\n        // //this.props.dispatch(fetchAllProperties(checkCookie()));\n        // console.log('selected option: ' + this.props.selectedOption);\n\n\n        // if(this.props.selectedOption === \"\"){\n        //\n        //     this.props.dispatch(fetchAllProperties(checkCookie()));\n        //     this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)));\n        // }\n        // else {\n        //\n        //     this.props.dispatch(updateSelectedMovie(this.props.selectedOption));\n        //\n        // }\n        //updateSelectedMovie(this.props.hash.substr(2));\n        // console.log('selected option: ' + this.props.selectedOption);\n        //\n\n        //this.props.dispatch(fetchAllProperties(checkCookie()));\n\n    }\n    componentWillReceiveProps(newProps) {\n        //console.log('comp will receive props: ' )\n\n        //var newPropsObject = JSON.parse(newProps);\n        //var result = newPropsObject[0];\n        //console.log(JSON.parse(newProps))\n\n    }\n    shouldComponentUpdate(newProps, newState) {\n\n\n        return true;\n    }\n    componentWillUpdate(nextProps, nextState) {\n\n        let hash = this.props.hash.substr(2);\n        let currentPropertyID = this.props.selectedOption;\n\n        if(hash === '' && currentPropertyID == ''){\n            // let m = nextProps.propertyList[0]._id\n            // console.log(m)\n            //this.handleOnChangeSelectedOption(m);\n        }\n\n\n        //const firstMovie = JSON.parse(nextProps.propertyList[0]._id)\n        //this.handleOnChangeSelectedOption(firstMovie)\n        // console.log('comp will update')\n        // if(this.props.selectedOption === '') {\n        //     let firstMovie = nextProps.propertyList[0]._id\n        //     this.handleOnChangeSelectedOption(firstMovie);\n        // }\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //updateSelectedMovie(prevProps.hash.substr(2))\n\n\n\n    }\n    componentWillUnmount() {\n        console.log('comp will unmount')\n\n    }\n\n    // handleOnLoadMovies = (token) => {\n    //     this.handleOnChangeSelectedOption(this.props.selectedOption || this.props.hash.substr(2));\n    //     this.props.dispatch(fetchAllProperties(token));\n    //\n    //\n    //\n    // };\n\n    componentDidMount() {\n\n\n        // if(this.props.selectedOption === \"\"){\n        //     this.props.dispatch(updateSelectedMovie(this.props.propertyList[0]._id));\n        // }\n\n        // this.props.dispatch(fetchAllProperties(checkCookie()));\n\n        //this.handleOnChangeSelectedOption(this.props.hash.substr(2))\n\n\n\n\n        //this.props.dispatch(fetchAllProperties(checkCookie()));\n        //this.props.dispatch(updateSelectedMovie(this.props.selectedOption));\n\n\n        //this.props.dispatch(replace('/movies/#/' + this.props.selectedOption));\n\n        //console.log('comp did mount')\n\n        //this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)));\n\n    }\n    handleOnChangeSelectedOption = (e) => {\n        console.log('value of e is ' + e);\n        this.props.dispatch(updateSelectedMovie(e));\n        this.props.dispatch(replace('/movies/#/' + e));\n\n    };\n    // handleOnLoadMovies = (token) => {\n    //     this.props.dispatch(fetchAllProperties(token)).then((response) => {\n    //         console.log('MOVIES RETURNED - UPDATE STATE' + response);\n    //         this.props.dispatch(updateSelectedMovie(this.props.hash.substr(2)))\n    //\n    //     }).catch((error) => {\n    //         console.log('ERROR')\n    //     }));\n    //\n    // };\n\n\n\n\n\n\n\n\n    render() {\n\n        return (\n            <Container className='movie-list-tabbed'>\n                {/*{*/}\n                    {/*(this.props.inFlight ? 'loading' : '')*/}\n                {/*}*/}\n                <Tab.Container id=\"moviestabs\" defaultActiveKey='a' activeKey={this.props.currentPropertyID} mountOnEnter={false}  onSelect={(e) => this.handleOnChangeSelectedOption(e) } >\n                    <Row>\n                        <Col md={3}>\n                            <Card>\n                                <Card.Header>Top Rated Movies</Card.Header>\n                                <Card.Body>\n                            <Nav variant=\"pills\" className=\"flex-column\" activeKey={this.props.selectedOption}  >\n                                    {\n                                        this.props.propertyList.map((property, index) => (\n                                        <Nav.Item key={property._id} >\n                                            <Nav.Link eventKey={property._id}>\n                                                {'' + (index+1) + '. ' + property.name}\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    ))}\n                            </Nav>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col md={9} >\n                            <Card body>\n                            <Tab.Content>\n                                {this.props.propertyList.map((movie, index) => (\n                                    <Tab.Pane key={movie._id} eventKey={movie._id} >\n                                        <Row>\n                                            <Col md={4}>\n                                                <Image width={200} src={movie.imageUrl}/>\n                                            </Col>\n\n                                            <Col md=\"8\">\n                                                <Row>\n                                                    <Col>\n                                                    <h2>{movie.title}</h2>\n                                                    <h3>Genre: {movie.genre}</h3>\n                                                    <h3>Average Rating: {movie.avgRating}</h3>\n                                                    </Col>\n                                                </Row>\n                                                <br/>\n                                                <br/>\n                                                <Row>\n                                                    <Col>\n                                                    {/*{*/}\n                                                        {/*movie.actors.map((actor, index) => (*/}\n                                                            {/*<p key={actor._id}>Actor Name: {actor.actorName}, Character Name: {actor.characterName}</p>*/}\n                                                        {/*))*/}\n                                                    {/*}*/}\n                                                        <>\n                                                            <Button variant=\"primary\" onClick={this.handleShow}>\n                                                                    Write a review\n                                                            </Button>\n\n\n                                                        </>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br/>\n                                        <br/>\n                                        <h3>Reviews</h3>\n                                        <CardColumns>\n\n                                        {/*{*/}\n                                            {/*movie.reviews.map((review, index) => (*/}\n\n                                                    {/*<Card className=\"review-quote\" key={review._id}>*/}\n\n                                                        {/*<blockquote className=\"blockquote mb-0 review-card-body\">*/}\n\n                                                            {/*<p className=\"review\">*/}\n                                                                {/*{review.reviewBody}*/}\n                                                            {/*</p>*/}\n\n                                                            {/*<footer className=\"review-blockquote-footer\">*/}\n                                                                {/*<small className=\"text-muted\">*/}\n                                                                    {/*Overall Rating: {review.reviewScore} stars*/}\n                                                                {/*</small>*/}\n                                                                {/*<br/>*/}\n                                                                {/*<small className=\"text-muted\">*/}\n                                                                    {/*-{review.reviewerName}*/}\n                                                                {/*</small>*/}\n                                                            {/*</footer>*/}\n                                                        {/*</blockquote>*/}\n                                                    {/*</Card>*/}\n                                            {/*))*/}\n                                        {/*}*/}\n                                        </CardColumns>\n                                    </Tab.Pane>\n\n                                ))}\n                            </Tab.Content>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Tab.Container>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create Review</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n\n                            <Form.Group as={Col} controlId=\"reviewForm.reviewBody\">\n                                <Form.Label>Movie Review</Form.Label>\n                                <Form.Control onChange={ (e) => this.handleOnChangeReviewBody(e)} type=\"text\" id=\"reviewBody\" as=\"textarea\" rows=\"3\" />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"reviewForm.rating\">\n                                <Form.Label>Rating</Form.Label>\n                                <DropdownButton\n\n                                    title={this.state.reviewRating }\n                                    id=\"dropdown-size-medium\"\n                                    onSelect={ (eventKey, event) => this.handleOnSelectRating(eventKey, event) }\n                                >\n                                    <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                                </DropdownButton>\n                            </Form.Group>\n\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleClose}>\n                            Submit Review\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    hash: state.router.location.hash,\n    propertyList: state.movie.properties,\n    selectedOption: state.movie.selectedOption,\n    inFlight: state.movie.inFlight,\n});\n\nexport default connect(mapStateToProps)(PropertyList)\n\n// <ListGroup variant=\"flush\">\n//     {this.props.propertyList.map((movie, index) => (\n//             <ListGroup.Item\n//                 action\n//                 key={movie._id}\n//                 value={movie._id}\n//                 active={this.props.selectedOption === movie._id}\n//                 onClick={(e) => this.handleOnChangeSelectedOption(e)}\n//             >\n//                 {movie.title}\n//             </ListGroup.Item>\n//\n//         ))}\n// </ListGroup>\n"]},"metadata":{},"sourceType":"module"}